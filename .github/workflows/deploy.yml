name: Deploy to EC2 via SSM

on:
  push:
    branches:
      - dev
      - qa
    paths:
      - 'frontend/**'
      - 'backend/**'


jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}  # Use branch name as environment (dev/qa)
    env:
      INSTANCE_ID_DEV: ${{ secrets.EC2_INSTANCE_ID_DEV }}
      INSTANCE_ID_QA: ${{ secrets.EC2_INSTANCE_ID_QA }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change if you're in a different region
      - name: Detect Changes
        id: changes
        run: |
          echo "FRONTEND_CHANGED=false" >> $GITHUB_ENV
          echo "BACKEND_CHANGED=false" >> $GITHUB_ENV
          git fetch origin ${{ github.event.before }}
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^frontend/" && echo "FRONTEND_CHANGED=true" >> $GITHUB_ENV || true
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^backend/" && echo "BACKEND_CHANGED=true" >> $GITHUB_ENV || true
      - name: Set Instance ID
        id: set-instance
        run: |
          BRANCH=$(echo "${{ github.ref }}" | awk -F'/' '{print $3}')
          if [[ "$BRANCH" == "dev" ]]; then
            echo "INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID_DEV }}" >> $GITHUB_ENV
          elif [[ "$BRANCH" == "qa" ]]; then
            echo "INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID_QA }}" >> $GITHUB_ENV
          fi
      - name: Deploy Frontend
        if: env.FRONTEND_CHANGED == 'true'
        run: |
          aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploying Frontend" \
            --parameters commands=["bash ~/scripts/deploy-frontend.sh"] \
            --region us-east-1
      - name: Deploy Backend
        if: env.BACKEND_CHANGED == 'true'
        run: |
          aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploying Backend" \
            --parameters commands=["bash ~/scripts/deploy-backend.sh"] \
            --region us-east-1  
    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v3

    #   - name: Configure AWS Credentials
    #     uses: aws-actions/configure-aws-credentials@v4
    #     with:
    #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws-region: ${{ secrets.AWS_REGION }}

    #   - name: Check Changed Files
    #     uses: tj-actions/changed-files@v35
    #     id: changed-files
    #     with:
    #       files: |
    #         frontend/**
    #         backend/**
      
    #   - name: Set Instance ID
    #     id: set-instance
    #     run: |
    #       BRANCH=$(echo "${{ github.ref }}" | awk -F'/' '{print $3}')
    #       if [[ "$BRANCH" == "dev" ]]; then
    #         echo "INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID_DEV }}" >> $GITHUB_ENV
    #       elif [[ "$BRANCH" == "qa" ]]; then
    #         echo "INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID_QA }}" >> $GITHUB_ENV
    #       fi

          
    #   - name: Deploy Frontend if Changed

    #     if: steps.changed-files.outputs.any_changed == 'true' && contains(steps.changed-files.outputs.changed_files, 'frontend/')
    #     run: |
    #       COMMAND_ID=$(aws ssm send-command \
    #         --instance-ids $INSTANCE_ID \
    #         --document-name "AWS-RunShellScript" \
    #         --parameters '{"commands":["bash ~/scripts/deploy-frontend.sh ${{ github.ref_name }}"]}' \
    #         --comment "Deploying frontend to ${{ github.ref_name }}" \
    #         --query "Command.CommandId" \
    #         --output text)
    #       echo "Frontend Command ID: $COMMAND_ID"
    #       STATUS=$(aws ssm list-command-invocations --command-id "$COMMAND_ID" --details --query "CommandInvocations[].Status" --output text)
    #       if [ "$STATUS" != "Success" ]; then
    #         echo "Frontend deployment failed"
    #         exit 1
    #       fi
    #       echo "Frontend deployment succeeded"

    #   - name: Deploy Backend if Changed
    #     if: steps.changed-files.outputs.any_changed == 'true' && contains(steps.changed-files.outputs.changed_files, 'backend/')
    #     run: |
    #       COMMAND_ID=$(aws ssm send-command \
    #         --instance-ids $INSTANCE_ID \
    #         --document-name "AWS-RunShellScript" \
    #         --parameters '{"commands":["bash ~/scripts/deploy-backend.sh ${{ github.ref_name }}"]}' \
    #         --comment "Deploying backend to ${{ github.ref_name }}" \
    #         --query "Command.CommandId" \
    #         --output text)
    #       echo "Backend Command ID: $COMMAND_ID"
    #       STATUS=$(aws ssm list-command-invocations --command-id "$COMMAND_ID" --details --query "CommandInvocations[].Status" --output text)
    #       if [ "$STATUS" != "Success" ]; then
    #         echo "Backend deployment failed"
    #         exit 1
    #       fi
    #       echo "Backend deployment succeeded"
